
//=======================================================
//  This code is generated by Terasic System Builder
//=======================================================

`default_nettype none
// if non net is decleared it wil not create a 1 bit wire, 
// it throws an error 

module Toplevel_C5G_GPIO(

	//////////// CLOCK //////////
	input 		          		CLOCK_125_p,
	input 		          		CLOCK_50_B5B,
	input 		          		CLOCK_50_B6A,
	input 		          		CLOCK_50_B7A,
	input 		          		CLOCK_50_B8A,

	//////////// LED //////////
	output		     [7:0]		LEDG,
	output		     [9:0]		LEDR,

	//////////// KEY //////////
	input 		          		CPU_RESET_n,
	input 		     [3:0]		KEY,

	//////////// SW //////////
	input 		     [9:0]		SW,

	//////////// SEG7 //////////
	output		     [6:0]		HEX0,
	output		     [6:0]		HEX1,

	//////////// GPIO, GPIO connect to GPIO Default //////////
	inout 		    [35:0]		GPIO
);



//=======================================================
//  REG/WIRE declarations
//=======================================================
	logic			clk50m;
	logic			rst_n;
	logic			button;
	logic			pushed;
	logic	[7:0]	counter_value;



//=======================================================
//  Structural coding
//=======================================================

	assign	rst_n = CPU_RESET_n;
	assign	clk50m = CLOCK_50_B5B;
	assign	button = KEY[0];
	
	edgedetect			u1_edgedetect(
		.rst_n			(rst_n),
		.clk50m			(clk50m),
		.in				(button),
		.risingedge		(),
		.fallingedge	(pushed)
	);
	
	upcounter			u1_upcounter(
		.rst_n			(rst_n),
		.clk50m			(clk50m),	
		.enable			(pushed),
		.count			(counter_value)
	);
	
	sevenseg				u1_sevenseg(
		.bin				(counter_value[3:0]),
		.sevenseg		(),
		.sevenseg_n		(HEX0)
	);
	
	sevenseg				u2_sevenseg(
		.bin				(counter_value[7:4]),
		.sevenseg		(),
		.sevenseg_n		(HEX1)
	);
	

endmodule
